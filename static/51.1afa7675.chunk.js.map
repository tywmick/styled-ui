{"version":3,"sources":["webpack:///static/51.1afa7675.chunk.js","webpack:///./catalog/dropdown/variations-v6.md?688b","webpack:///./catalog/dropdown/variations-v6.md"],"names":["webpackJsonp","2175","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2251"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/51.1afa7675.chunk.js","sourcesContent":["webpackJsonp([51],{\n\n/***/ 2175:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(94);\n    var PageRenderer = __webpack_require__(465).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2251)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2251:\n/***/ (function(module, exports) {\n\nmodule.exports = \"- [✔] Styled Systems support\\n- [✔] WAI-ARIA compliant\\n\\n## Dropdown v6\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Split Dropdown Toggle\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>\\n\\t\\t\\t<Dropdown.ActionButton onClick={() => alert(\\\"Different Action\\\")}>Show a Dropdown!</Dropdown.ActionButton>\\n\\t\\t</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Dropdown Menu Items\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false, isChecked: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Title>Dropdown</Dropdown.Title>\\n\\t\\t\\t<Dropdown.Separator />\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item\\\")}>Menu Item</Dropdown.Item>\\n\\t\\t\\t<Dropdown.CheckboxItem isChecked={state.isChecked} onToggle={() => setState({ isChecked: !state.isChecked })}>Menu Checkbox</Dropdown.CheckboxItem>\\n\\t\\t\\t<Dropdown.LinkItem href=\\\"https://faithlife.github.io/styled-ui/#/icons\\\" target=\\\"_blank\\\">Menu Link</Dropdown.LinkItem>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Using custom toggle component\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>\\n\\t\\t\\t{(ref, {onKeyDown, onClick, ariaProps}) =>\\n\\t\\t\\t\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" ref={ref} onKeyDown={onKeyDown} onClick={onClick} {...ariaProps}>Show a Dropdown!</Button>}\\n\\t\\t</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## With icon\\n\\nvariant = icon | thumbnail | avatar\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} width=\\\"280px\\\" onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>\\n\\t\\t\\t\\t<Dropdown.ItemIcon><FavoriteFilled /></Dropdown.ItemIcon>\\n\\t\\t\\t\\t<Dropdown.ItemPrimaryText>Menu Item 1</Dropdown.ItemPrimaryText>\\n\\t\\t\\t\\t<Dropdown.ItemSecondaryText>Variant = Icon</Dropdown.ItemSecondaryText>\\n\\t\\t\\t</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>\\n\\t\\t\\t\\t<Dropdown.ItemIcon src={thumbnailSrc} variant=\\\"thumbnail\\\" />\\n\\t\\t\\t\\t<Dropdown.ItemPrimaryText>Menu Item 2</Dropdown.ItemPrimaryText>\\n\\t\\t\\t\\t<Dropdown.ItemSecondaryText>Variant = Thumbnail</Dropdown.ItemSecondaryText>\\n\\t\\t\\t</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 3\\\")}>\\n\\t\\t\\t\\t<Dropdown.ItemIcon src={avatarSrc} variant=\\\"avatar\\\" />\\n\\t\\t\\t\\t<Dropdown.ItemPrimaryText fontWeight={1}>Menu Item 3 (Avatar)</Dropdown.ItemPrimaryText>\\n\\t\\t\\t</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Styling\\n\\nToggle, Menu, Title, Item, Item variants, and Item config children all accept styled-system props.\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle variant=\\\"minor\\\">Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item color=\\\"red\\\" onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/51.1afa7675.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/dropdown/variations-v6.md\n// module id = 2175\n// module chunks = 51","module.exports = \"- [✔] Styled Systems support\\n- [✔] WAI-ARIA compliant\\n\\n## Dropdown v6\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Split Dropdown Toggle\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>\\n\\t\\t\\t<Dropdown.ActionButton onClick={() => alert(\\\"Different Action\\\")}>Show a Dropdown!</Dropdown.ActionButton>\\n\\t\\t</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item disabled onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Dropdown Menu Items\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false, isChecked: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Title>Dropdown</Dropdown.Title>\\n\\t\\t\\t<Dropdown.Separator />\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item\\\")}>Menu Item</Dropdown.Item>\\n\\t\\t\\t<Dropdown.CheckboxItem isChecked={state.isChecked} onToggle={() => setState({ isChecked: !state.isChecked })}>Menu Checkbox</Dropdown.CheckboxItem>\\n\\t\\t\\t<Dropdown.LinkItem href=\\\"https://faithlife.github.io/styled-ui/#/icons\\\" target=\\\"_blank\\\">Menu Link</Dropdown.LinkItem>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Using custom toggle component\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>\\n\\t\\t\\t{(ref, {onKeyDown, onClick, ariaProps}) =>\\n\\t\\t\\t\\t<Button variant=\\\"primary\\\" size=\\\"medium\\\" ref={ref} onKeyDown={onKeyDown} onClick={onClick} {...ariaProps}>Show a Dropdown!</Button>}\\n\\t\\t</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## With icon\\n\\nvariant = icon | thumbnail | avatar\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} width=\\\"280px\\\" onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>\\n\\t\\t\\t\\t<Dropdown.ItemIcon><FavoriteFilled /></Dropdown.ItemIcon>\\n\\t\\t\\t\\t<Dropdown.ItemPrimaryText>Menu Item 1</Dropdown.ItemPrimaryText>\\n\\t\\t\\t\\t<Dropdown.ItemSecondaryText>Variant = Icon</Dropdown.ItemSecondaryText>\\n\\t\\t\\t</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>\\n\\t\\t\\t\\t<Dropdown.ItemIcon src={thumbnailSrc} variant=\\\"thumbnail\\\" />\\n\\t\\t\\t\\t<Dropdown.ItemPrimaryText>Menu Item 2</Dropdown.ItemPrimaryText>\\n\\t\\t\\t\\t<Dropdown.ItemSecondaryText>Variant = Thumbnail</Dropdown.ItemSecondaryText>\\n\\t\\t\\t</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 3\\\")}>\\n\\t\\t\\t\\t<Dropdown.ItemIcon src={avatarSrc} variant=\\\"avatar\\\" />\\n\\t\\t\\t\\t<Dropdown.ItemPrimaryText fontWeight={1}>Menu Item 3 (Avatar)</Dropdown.ItemPrimaryText>\\n\\t\\t\\t</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\\n## Styling\\n\\nToggle, Menu, Title, Item, Item variants, and Item config children all accept styled-system props.\\n\\n```react\\nshowSource: true\\nstate: { isOpen: false }\\n---\\n<DropdownDemo>\\n\\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\\n\\t\\t<Dropdown.Toggle variant=\\\"minor\\\">Show a Dropdown!</Dropdown.Toggle>\\n\\t\\t<Dropdown.Menu>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 1\\\")}>Menu Item 1</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item onClick={() => alert(\\\"Menu Item 2\\\")}>Menu Item 2</Dropdown.Item>\\n\\t\\t\\t<Dropdown.Item color=\\\"red\\\" onClick={() => alert(\\\"Menu Item 3\\\")}>Menu Item 3</Dropdown.Item>\\n\\t\\t</Dropdown.Menu>\\n\\t</Dropdown>\\n</DropdownDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/dropdown/variations-v6.md\n// module id = 2251\n// module chunks = 51"],"sourceRoot":""}