webpackJsonp([51],{2175:function(n,t,e){var o=e(0),r=e(94),p=e(465).PageRenderer;p.__esModule&&(p=p.default);var d=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:e(2251)}},componentWillMount:function(){},render:function(){return o.createElement(p,Object.assign({},this.props,{content:this.state.content}))}});d.__catalog_loader__=!0,n.exports=d},2251:function(n,t){n.exports='- [\u2714] Styled Systems support\n- [\u2714] WAI-ARIA compliant\n\n## Dropdown v6\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<DropdownDemo>\n\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Dropdown.Item>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Dropdown.Item>\n\t\t\t<Dropdown.Item disabled onClick={() => alert("Menu Item 3")}>Menu Item 3</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n</DropdownDemo>\n```\n\n## Split Dropdown Toggle\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<DropdownDemo>\n\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Dropdown.Toggle>\n\t\t\t<Dropdown.ActionButton onClick={() => alert("Different Action")}>Show a Dropdown!</Dropdown.ActionButton>\n\t\t</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Dropdown.Item>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Dropdown.Item>\n\t\t\t<Dropdown.Item disabled onClick={() => alert("Menu Item 3")}>Menu Item 3</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n</DropdownDemo>\n```\n\n## Dropdown Menu Items\n\n```react\nshowSource: true\nstate: { isOpen: false, isChecked: false }\n---\n<DropdownDemo>\n\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Title>Dropdown</Dropdown.Title>\n\t\t\t<Dropdown.Separator />\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item")}>Menu Item</Dropdown.Item>\n\t\t\t<Dropdown.CheckboxItem isChecked={state.isChecked} onToggle={() => setState({ isChecked: !state.isChecked })}>Menu Checkbox</Dropdown.CheckboxItem>\n\t\t\t<Dropdown.LinkItem href="https://faithlife.github.io/styled-ui/#/icons" target="_blank">Menu Link</Dropdown.LinkItem>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n</DropdownDemo>\n```\n\n## Using custom toggle component\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<DropdownDemo>\n\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Dropdown.Toggle>\n\t\t\t{(ref, {onKeyDown, onClick, ariaProps}) =>\n\t\t\t\t<Button variant="primary" size="medium" ref={ref} onKeyDown={onKeyDown} onClick={onClick} {...ariaProps}>Show a Dropdown!</Button>}\n\t\t</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Dropdown.Item>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Dropdown.Item>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 3")}>Menu Item 3</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n</DropdownDemo>\n```\n\n## With icon\n\nvariant = icon | thumbnail | avatar\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<DropdownDemo>\n\t<Dropdown isOpen={state.isOpen} width="280px" onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Dropdown.Toggle>Show a Dropdown!</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 1")}>\n\t\t\t\t<Dropdown.ItemIcon><FavoriteFilled /></Dropdown.ItemIcon>\n\t\t\t\t<Dropdown.ItemPrimaryText>Menu Item 1</Dropdown.ItemPrimaryText>\n\t\t\t\t<Dropdown.ItemSecondaryText>Variant = Icon</Dropdown.ItemSecondaryText>\n\t\t\t</Dropdown.Item>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 2")}>\n\t\t\t\t<Dropdown.ItemIcon src={thumbnailSrc} variant="thumbnail" />\n\t\t\t\t<Dropdown.ItemPrimaryText>Menu Item 2</Dropdown.ItemPrimaryText>\n\t\t\t\t<Dropdown.ItemSecondaryText>Variant = Thumbnail</Dropdown.ItemSecondaryText>\n\t\t\t</Dropdown.Item>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 3")}>\n\t\t\t\t<Dropdown.ItemIcon src={avatarSrc} variant="avatar" />\n\t\t\t\t<Dropdown.ItemPrimaryText fontWeight={1}>Menu Item 3 (Avatar)</Dropdown.ItemPrimaryText>\n\t\t\t</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n</DropdownDemo>\n```\n\n## Styling\n\nToggle, Menu, Title, Item, Item variants, and Item config children all accept styled-system props.\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<DropdownDemo>\n\t<Dropdown isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Dropdown.Toggle variant="minor">Show a Dropdown!</Dropdown.Toggle>\n\t\t<Dropdown.Menu>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Dropdown.Item>\n\t\t\t<Dropdown.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Dropdown.Item>\n\t\t\t<Dropdown.Item color="red" onClick={() => alert("Menu Item 3")}>Menu Item 3</Dropdown.Item>\n\t\t</Dropdown.Menu>\n\t</Dropdown>\n</DropdownDemo>\n```\n'}});
//# sourceMappingURL=51.1afa7675.chunk.js.map